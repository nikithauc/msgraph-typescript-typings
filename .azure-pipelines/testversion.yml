# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  newVersionStr: ""
steps:

# - task: PowerShell@2
#   displayName: 'Git: checkout master'
#   inputs:
#     targetType: inline
#     # workingDirectory: '$(Build.SourcesDirectory)/msgraph-typescript-typings'
#     script: |
#       git checkout master | Write-Host
- task: PowerShell@2
  displayName: 'Git: branch from master named with the build id: $(Build.BuildId)'
  inputs:
    targetType: inline
    #workingDirectory: '$(Build.SourcesDirectory)/msgraph-typescript-typings'
    script: |
      
      Write-Host "The new branch name will be: $env:branchName"
      git checkout -B "testingVersion" | Write-Host
      
# - task: PowerShell@2
#   displayName: 'Git: set user config'
#   inputs:
#     targetType: inline
#     workingDirectory: '$(Build.SourcesDirectory)/msgraph-typescript-typings'
#     script: |
#       git config user.email "GraphTooling@service.microsoft.com"
#       git config user.name "Microsoft Graph DevX Tooling"
      
- task: PowerShell@2
  inputs:
    filePath: "$(System.DefaultWorkingDirectory)/scripts/src/CalculateNewProductionVersion.ps1"
  
- task: NodeTool@0 
  displayName: Update Version
  inputs:
     versionSpec: 12
     workingDir: scripts
     script: npm install 
     customCommand: 'run update:version -- --newVersion="$(newVersionStr)"'
- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
  
  
- task: PowerShell@2
  displayName: 'Git: stage and commit generated files'
  env: # [2]
    GIT_REDIRECT_STDERR: "2>&1"
  inputs:
    targetType: inline
    # workingDirectory: '$(Build.SourcesDirectory)/msgraph-typescript-typings'
    script: |
      Write-Host "About to add files....." -ForegroundColor Green
      git add -A | Write-Host
      git commit -m "Commiting test" | Write-Host
      
      Write-Host "Added and committed all files." -ForegroundColor Green
- task: PowerShell@2
  displayName: 'Git: push updates'
  env: # [2]
    GIT_REDIRECT_STDERR: "2>&1"
  inputs:
    targetType: inline
    # workingDirectory: '$(Build.SourcesDirectory)/msgraph-typescript-typings'
    script: |
      git push origin "testingVersion" | Write-Host
      Write-Host "Pushed the results of the build to the testingVersion branch." -ForegroundColor Green
  enabled: true
  

